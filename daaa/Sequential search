#include <stdio.h>
#include <time.h>  // Required for clock() and CLOCKS_PER_SEC

int main() {
    int arr[100], n, key, i, found = 0;
    clock_t start, end;  // To store clock ticks
    double time_taken;

    printf("Enter number of elements: ");
    scanf("%d", &n);  // O(1)

    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);  // O(n) â€” Input loop
    }

    printf("Enter the key to search: ");
    scanf("%d", &key);  // O(1)

    // Start measuring time
    start = clock();

    // Sequential Search - Time Complexity Analysis:
    // Worst Case: O(n) comparisons
    for (i = 0; i < n; i++) {   // O(n)
        if (arr[i] == key) {   // O(1)
            printf("Element found at index %d\n", i);  // O(1)
            found = 1;
            break;  // Stop as soon as key is found
        }
    }

    if (!found) {
        printf("Element not found.\n");  // O(1)
    }

    // Stop measuring time
    end = clock();

    // Calculate time taken in seconds
    time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
    printf("Time taken for search: %f seconds\n", time_taken);

    // Time Complexity Summary:
    // Best Case: O(1)
    // Worst Case: O(n)
    // Average Case: O(n)
    // Space Complexity: O(1)

    return 0;
}
